{"version":3,"file":"shivrajgodle-mydemo-lib.js","sources":["../../../projects/mydemo-lib/src/lib/ccinput-box/ccinput-box.component.ts","../../../projects/mydemo-lib/src/lib/ccinput-box/ccinput-box.component.html","../../../projects/mydemo-lib/src/lib/buttion/buttion.component.ts","../../../projects/mydemo-lib/src/lib/buttion/buttion.component.html","../../../projects/mydemo-lib/src/lib/counter/counter.component.ts","../../../projects/mydemo-lib/src/lib/counter/counter.component.html","../../../projects/mydemo-lib/src/lib/mydemo-lib.service.ts","../../../projects/mydemo-lib/src/lib/mydemo-lib.component.ts","../../../projects/mydemo-lib/src/lib/mydemo-lib.module.ts","../../../projects/mydemo-lib/src/public-api.ts","../../../projects/mydemo-lib/src/shivrajgodle-mydemo-lib.ts"],"sourcesContent":["import { Component, HostListener, Input, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'lib-ccinput-box',\n  templateUrl: './ccinput-box.component.html',\n  styleUrls: ['./ccinput-box.component.css']\n})\nexport class CCInputBoxComponent implements OnInit {\n\n  @Input() placeholderText!:String;\n  @Input() cardNumber!:String;\n  @Input() iconText!:String;\n\n\n\n\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n\n\n@HostListener('input', ['$event'])\nonKeyDown(event: KeyboardEvent) {\n  const input = event.target as HTMLInputElement;\n\n  let trimmed = input.value.replace(/\\s+/g, '');\n  if (trimmed.length > 16) {\n    trimmed = trimmed.substr(0, 16);\n  }\n\n  let numbers = [];\n  for (let i = 0; i < trimmed.length; i += 4) {\n    numbers.push(trimmed.substr(i, 4));\n  }\n\n  input.value = numbers.join(' ');\n\n}\n\n\n\n}\n","\n\n<mat-form-field appearance=\"standard\">\n  <input matInput formControlName=\"{{cardNumber}}\" type=\"text\"  placeholder=\"{{placeholderText}}\" credit-card>\n  <mat-icon matSuffix>{{iconText}}</mat-icon>\n\n</mat-form-field>\n\n\n\n\n\n\n","import { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\n\n@Component({\n  selector: 'lib-buttion',\n  templateUrl: './buttion.component.html',\n  styleUrls: ['./buttion.component.css']\n})\nexport class ButtionComponent implements OnInit {\n@Input() buttonText!:String;\n@Input() iconName!:String;\n\n\n// @Output() buttonClickEmit: EventEmitter<string> = new EventEmitter<string>();\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n  onButtonClick(){\n\n    // this.buttonClickEmit.emit('you have clicked on button');\n\n  }\n\n}\n","\n\n\n\n<button type=\"button\" (click)=\"onButtonClick()\" mat-raised-button color=\"primary\">\n\n  {{buttonText}}\n\n  <mat-icon>{{iconName}} </mat-icon>\n\n</button>\n\n\n","import { Component, EventEmitter, OnInit, Output } from '@angular/core';\n\n\n@Component({\n  selector: 'lib-counter',\n  templateUrl: './counter.component.html',\n  styleUrls: ['./counter.component.css']\n})\nexport class CounterComponent implements OnInit {\n  @Output() countChanged: EventEmitter<any> = new EventEmitter();\n  clickCount:any =0;\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n  onPlusClick(){\n    this.clickCount++;\n    this.countChanged.emit(this.clickCount)\n\n  }\n  onMinusClick(){\n    this.clickCount--;\n    this.countChanged.emit(this.clickCount);\n  }\n\n}\n","\n\n\n  <button mat-mini-fab color=\"accent\" aria-label=\"Example icon button with a plus one icon\" (click)=\"onPlusClick()\">\n    <mat-icon>add</mat-icon>\n  </button>\n  \n  <input type=\"text\" readonly class=\"counter\" value=\"{{clickCount}}\">\n\n  <button mat-mini-fab color=\"accent\" aria-label=\"Example icon button with a plus one icon\" (click)=\"onMinusClick()\">\n    <mat-icon>remove</mat-icon>\n  </button>\n","import { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class MydemoLibService {\n\n  constructor() { }\n}\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'lib-mydemo-lib',\n  template: `\n    <p>\n      mydemo-lib works!\n    </p>\n  `,\n  styles: [\n  ]\n})\nexport class MydemoLibComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { MydemoLibComponent } from './mydemo-lib.component';\nimport { CounterComponent } from './counter/counter.component';\nimport {MatButtonModule} from '@angular/material/button';\nimport {MatIconModule} from '@angular/material/icon';\nimport { ButtionComponent } from './buttion/buttion.component';\nimport { CCInputBoxComponent } from './ccinput-box/ccinput-box.component';\nimport {MatFormFieldModule} from '@angular/material/form-field';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport {MatInputModule} from '@angular/material/input';\n\n\n@NgModule({\n  declarations: [\n    MydemoLibComponent,\n    CounterComponent,\n    ButtionComponent,\n    CCInputBoxComponent\n  ],\n  imports: [\n    MatButtonModule,\n    MatIconModule,\n    MatFormFieldModule,\n    ReactiveFormsModule,\n    MatInputModule\n  ],\n  exports: [\n    MydemoLibComponent,CounterComponent, ButtionComponent , CCInputBoxComponent\n  ]\n})\nexport class MydemoLibModule { }\n","/*\n * Public API Surface of mydemo-lib\n */\n\nexport * from './lib/ccinput-box/ccinput-box.component'\nexport * from './lib/buttion/buttion.component'\nexport * from './lib/counter/counter.component'\nexport * from './lib/mydemo-lib.service';\nexport * from './lib/mydemo-lib.component';\nexport * from './lib/mydemo-lib.module';\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n"],"names":[],"mappings":"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"}