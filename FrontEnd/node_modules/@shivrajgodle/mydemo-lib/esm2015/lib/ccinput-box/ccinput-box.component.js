import { Component, HostListener, Input } from '@angular/core';
import * as i0 from "@angular/core";
import * as i1 from "@angular/material/form-field";
import * as i2 from "@angular/material/icon";
import * as i3 from "@angular/material/input";
import * as i4 from "@angular/forms";
export class CCInputBoxComponent {
    constructor() { }
    ngOnInit() {
    }
    onKeyDown(event) {
        const input = event.target;
        let trimmed = input.value.replace(/\s+/g, '');
        if (trimmed.length > 16) {
            trimmed = trimmed.substr(0, 16);
        }
        let numbers = [];
        for (let i = 0; i < trimmed.length; i += 4) {
            numbers.push(trimmed.substr(i, 4));
        }
        input.value = numbers.join(' ');
    }
}
CCInputBoxComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.0.5", ngImport: i0, type: CCInputBoxComponent, deps: [], target: i0.ɵɵFactoryTarget.Component });
CCInputBoxComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "12.0.0", version: "12.0.5", type: CCInputBoxComponent, selector: "lib-ccinput-box", inputs: { placeholderText: "placeholderText", cardNumber: "cardNumber", iconText: "iconText" }, host: { listeners: { "input": "onKeyDown($event)" } }, ngImport: i0, template: "\n\n<mat-form-field appearance=\"standard\">\n  <input matInput formControlName=\"{{cardNumber}}\" type=\"text\"  placeholder=\"{{placeholderText}}\" credit-card>\n  <mat-icon matSuffix>{{iconText}}</mat-icon>\n\n</mat-form-field>\n\n\n\n\n\n\n", styles: ["mat-card{width:100%}mat-card-header{border-bottom:1px solid #000;padding:30px 30px 10px;width:250px;text-align:center;background-color:#00ff7f}mat-card-content{margin-top:10px;width:100%}img{width:100px;height:120px}.add_product{font-size:35px;font-weight:450;padding:10px;text-align:center}form{background-color:#fff;text-align:center;padding:0}button,form{border:1px solid #000}button{width:40px;margin-top:10px}input{background-color:#fff;font-size:18px}.space{margin-bottom:0}@media (min-width:768px){form{border:1px solid #000;background-color:#fff;text-align:center;padding:0}mat-card-header{border-bottom:1px solid #000;padding:30px 30px 10px;width:650px;background-color:#00ff7f}mat-card-content{margin-top:10px}mat-form-field{width:550px}button{width:90px;text-align:right;margin-right:30px}}.invisible{display:block;visibility:hidden;height:0;width:0}.month,.year{width:70px;text-align:center}.cvv{width:50px;text-align:center}.payment{border-style:dashed;width:95%;margin-left:5px;border-radius:20px}.icons{padding:0 30px}"], components: [{ type: i1.MatFormField, selector: "mat-form-field", inputs: ["color", "floatLabel", "appearance", "hideRequiredMarker", "hintLabel"], exportAs: ["matFormField"] }, { type: i2.MatIcon, selector: "mat-icon", inputs: ["color", "inline", "svgIcon", "fontSet", "fontIcon"], exportAs: ["matIcon"] }], directives: [{ type: i3.MatInput, selector: "input[matInput], textarea[matInput], select[matNativeControl],      input[matNativeControl], textarea[matNativeControl]", inputs: ["id", "disabled", "required", "type", "value", "readonly", "placeholder", "errorStateMatcher", "aria-describedby"], exportAs: ["matInput"] }, { type: i4.DefaultValueAccessor, selector: "input:not([type=checkbox])[formControlName],textarea[formControlName],input:not([type=checkbox])[formControl],textarea[formControl],input:not([type=checkbox])[ngModel],textarea[ngModel],[ngDefaultControl]" }, { type: i4.NgControlStatus, selector: "[formControlName],[ngModel],[formControl]" }, { type: i4.FormControlName, selector: "[formControlName]", inputs: ["disabled", "formControlName", "ngModel"], outputs: ["ngModelChange"] }, { type: i1.MatSuffix, selector: "[matSuffix]" }] });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.0.5", ngImport: i0, type: CCInputBoxComponent, decorators: [{
            type: Component,
            args: [{
                    selector: 'lib-ccinput-box',
                    templateUrl: './ccinput-box.component.html',
                    styleUrls: ['./ccinput-box.component.css']
                }]
        }], ctorParameters: function () { return []; }, propDecorators: { placeholderText: [{
                type: Input
            }], cardNumber: [{
                type: Input
            }], iconText: [{
                type: Input
            }], onKeyDown: [{
                type: HostListener,
                args: ['input', ['$event']]
            }] } });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY2NpbnB1dC1ib3guY29tcG9uZW50LmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vLi4vcHJvamVjdHMvbXlkZW1vLWxpYi9zcmMvbGliL2NjaW5wdXQtYm94L2NjaW5wdXQtYm94LmNvbXBvbmVudC50cyIsIi4uLy4uLy4uLy4uLy4uL3Byb2plY3RzL215ZGVtby1saWIvc3JjL2xpYi9jY2lucHV0LWJveC9jY2lucHV0LWJveC5jb21wb25lbnQuaHRtbCJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxPQUFPLEVBQUUsU0FBUyxFQUFFLFlBQVksRUFBRSxLQUFLLEVBQVUsTUFBTSxlQUFlLENBQUM7Ozs7OztBQU92RSxNQUFNLE9BQU8sbUJBQW1CO0lBVTlCLGdCQUFnQixDQUFDO0lBRWpCLFFBQVE7SUFDUixDQUFDO0lBS0gsU0FBUyxDQUFDLEtBQW9CO1FBQzVCLE1BQU0sS0FBSyxHQUFHLEtBQUssQ0FBQyxNQUEwQixDQUFDO1FBRS9DLElBQUksT0FBTyxHQUFHLEtBQUssQ0FBQyxLQUFLLENBQUMsT0FBTyxDQUFDLE1BQU0sRUFBRSxFQUFFLENBQUMsQ0FBQztRQUM5QyxJQUFJLE9BQU8sQ0FBQyxNQUFNLEdBQUcsRUFBRSxFQUFFO1lBQ3ZCLE9BQU8sR0FBRyxPQUFPLENBQUMsTUFBTSxDQUFDLENBQUMsRUFBRSxFQUFFLENBQUMsQ0FBQztTQUNqQztRQUVELElBQUksT0FBTyxHQUFHLEVBQUUsQ0FBQztRQUNqQixLQUFLLElBQUksQ0FBQyxHQUFHLENBQUMsRUFBRSxDQUFDLEdBQUcsT0FBTyxDQUFDLE1BQU0sRUFBRSxDQUFDLElBQUksQ0FBQyxFQUFFO1lBQzFDLE9BQU8sQ0FBQyxJQUFJLENBQUMsT0FBTyxDQUFDLE1BQU0sQ0FBQyxDQUFDLEVBQUUsQ0FBQyxDQUFDLENBQUMsQ0FBQztTQUNwQztRQUVELEtBQUssQ0FBQyxLQUFLLEdBQUcsT0FBTyxDQUFDLElBQUksQ0FBQyxHQUFHLENBQUMsQ0FBQztJQUVsQyxDQUFDOztnSEFqQ1ksbUJBQW1CO29HQUFuQixtQkFBbUIsOE1DUGhDLHNQQWFBOzJGRE5hLG1CQUFtQjtrQkFML0IsU0FBUzttQkFBQztvQkFDVCxRQUFRLEVBQUUsaUJBQWlCO29CQUMzQixXQUFXLEVBQUUsOEJBQThCO29CQUMzQyxTQUFTLEVBQUUsQ0FBQyw2QkFBNkIsQ0FBQztpQkFDM0M7MEVBR1UsZUFBZTtzQkFBdkIsS0FBSztnQkFDRyxVQUFVO3NCQUFsQixLQUFLO2dCQUNHLFFBQVE7c0JBQWhCLEtBQUs7Z0JBY1IsU0FBUztzQkFEUixZQUFZO3VCQUFDLE9BQU8sRUFBRSxDQUFDLFFBQVEsQ0FBQyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IENvbXBvbmVudCwgSG9zdExpc3RlbmVyLCBJbnB1dCwgT25Jbml0IH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5cbkBDb21wb25lbnQoe1xuICBzZWxlY3RvcjogJ2xpYi1jY2lucHV0LWJveCcsXG4gIHRlbXBsYXRlVXJsOiAnLi9jY2lucHV0LWJveC5jb21wb25lbnQuaHRtbCcsXG4gIHN0eWxlVXJsczogWycuL2NjaW5wdXQtYm94LmNvbXBvbmVudC5jc3MnXVxufSlcbmV4cG9ydCBjbGFzcyBDQ0lucHV0Qm94Q29tcG9uZW50IGltcGxlbWVudHMgT25Jbml0IHtcblxuICBASW5wdXQoKSBwbGFjZWhvbGRlclRleHQhOlN0cmluZztcbiAgQElucHV0KCkgY2FyZE51bWJlciE6U3RyaW5nO1xuICBASW5wdXQoKSBpY29uVGV4dCE6U3RyaW5nO1xuXG5cblxuXG5cbiAgY29uc3RydWN0b3IoKSB7IH1cblxuICBuZ09uSW5pdCgpOiB2b2lkIHtcbiAgfVxuXG5cblxuQEhvc3RMaXN0ZW5lcignaW5wdXQnLCBbJyRldmVudCddKVxub25LZXlEb3duKGV2ZW50OiBLZXlib2FyZEV2ZW50KSB7XG4gIGNvbnN0IGlucHV0ID0gZXZlbnQudGFyZ2V0IGFzIEhUTUxJbnB1dEVsZW1lbnQ7XG5cbiAgbGV0IHRyaW1tZWQgPSBpbnB1dC52YWx1ZS5yZXBsYWNlKC9cXHMrL2csICcnKTtcbiAgaWYgKHRyaW1tZWQubGVuZ3RoID4gMTYpIHtcbiAgICB0cmltbWVkID0gdHJpbW1lZC5zdWJzdHIoMCwgMTYpO1xuICB9XG5cbiAgbGV0IG51bWJlcnMgPSBbXTtcbiAgZm9yIChsZXQgaSA9IDA7IGkgPCB0cmltbWVkLmxlbmd0aDsgaSArPSA0KSB7XG4gICAgbnVtYmVycy5wdXNoKHRyaW1tZWQuc3Vic3RyKGksIDQpKTtcbiAgfVxuXG4gIGlucHV0LnZhbHVlID0gbnVtYmVycy5qb2luKCcgJyk7XG5cbn1cblxuXG5cbn1cbiIsIlxuXG48bWF0LWZvcm0tZmllbGQgYXBwZWFyYW5jZT1cInN0YW5kYXJkXCI+XG4gIDxpbnB1dCBtYXRJbnB1dCBmb3JtQ29udHJvbE5hbWU9XCJ7e2NhcmROdW1iZXJ9fVwiIHR5cGU9XCJ0ZXh0XCIgIHBsYWNlaG9sZGVyPVwie3twbGFjZWhvbGRlclRleHR9fVwiIGNyZWRpdC1jYXJkPlxuICA8bWF0LWljb24gbWF0U3VmZml4Pnt7aWNvblRleHR9fTwvbWF0LWljb24+XG5cbjwvbWF0LWZvcm0tZmllbGQ+XG5cblxuXG5cblxuXG4iXX0=