import { Component, EventEmitter, Output } from '@angular/core';
import * as i0 from "@angular/core";
import * as i1 from "@angular/material/button";
import * as i2 from "@angular/material/icon";
export class CounterComponent {
    constructor() {
        this.countChanged = new EventEmitter();
        this.clickCount = 0;
    }
    ngOnInit() {
    }
    onPlusClick() {
        this.clickCount++;
        this.countChanged.emit(this.clickCount);
    }
    onMinusClick() {
        this.clickCount--;
        this.countChanged.emit(this.clickCount);
    }
}
CounterComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.0.5", ngImport: i0, type: CounterComponent, deps: [], target: i0.ɵɵFactoryTarget.Component });
CounterComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "12.0.0", version: "12.0.5", type: CounterComponent, selector: "lib-counter", outputs: { countChanged: "countChanged" }, ngImport: i0, template: "\n\n\n  <button mat-mini-fab color=\"accent\" aria-label=\"Example icon button with a plus one icon\" (click)=\"onPlusClick()\">\n    <mat-icon>add</mat-icon>\n  </button>\n  \n  <input type=\"text\" readonly class=\"counter\" value=\"{{clickCount}}\">\n\n  <button mat-mini-fab color=\"accent\" aria-label=\"Example icon button with a plus one icon\" (click)=\"onMinusClick()\">\n    <mat-icon>remove</mat-icon>\n  </button>\n", styles: [".counter{text-align:center;background-color:#fff;width:50px;height:33.5px;border-top:1px solid #000;border-bottom:1px solid #000}"], components: [{ type: i1.MatButton, selector: "button[mat-button], button[mat-raised-button], button[mat-icon-button],             button[mat-fab], button[mat-mini-fab], button[mat-stroked-button],             button[mat-flat-button]", inputs: ["disabled", "disableRipple", "color"], exportAs: ["matButton"] }, { type: i2.MatIcon, selector: "mat-icon", inputs: ["color", "inline", "svgIcon", "fontSet", "fontIcon"], exportAs: ["matIcon"] }] });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.0.5", ngImport: i0, type: CounterComponent, decorators: [{
            type: Component,
            args: [{
                    selector: 'lib-counter',
                    templateUrl: './counter.component.html',
                    styleUrls: ['./counter.component.css']
                }]
        }], ctorParameters: function () { return []; }, propDecorators: { countChanged: [{
                type: Output
            }] } });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY291bnRlci5jb21wb25lbnQuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi8uLi9wcm9qZWN0cy9teWRlbW8tbGliL3NyYy9saWIvY291bnRlci9jb3VudGVyLmNvbXBvbmVudC50cyIsIi4uLy4uLy4uLy4uLy4uL3Byb2plY3RzL215ZGVtby1saWIvc3JjL2xpYi9jb3VudGVyL2NvdW50ZXIuY29tcG9uZW50Lmh0bWwiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsT0FBTyxFQUFFLFNBQVMsRUFBRSxZQUFZLEVBQVUsTUFBTSxFQUFFLE1BQU0sZUFBZSxDQUFDOzs7O0FBUXhFLE1BQU0sT0FBTyxnQkFBZ0I7SUFJM0I7UUFIVSxpQkFBWSxHQUFzQixJQUFJLFlBQVksRUFBRSxDQUFDO1FBQy9ELGVBQVUsR0FBTSxDQUFDLENBQUM7SUFFRixDQUFDO0lBRWpCLFFBQVE7SUFDUixDQUFDO0lBQ0QsV0FBVztRQUNULElBQUksQ0FBQyxVQUFVLEVBQUUsQ0FBQztRQUNsQixJQUFJLENBQUMsWUFBWSxDQUFDLElBQUksQ0FBQyxJQUFJLENBQUMsVUFBVSxDQUFDLENBQUE7SUFFekMsQ0FBQztJQUNELFlBQVk7UUFDVixJQUFJLENBQUMsVUFBVSxFQUFFLENBQUM7UUFDbEIsSUFBSSxDQUFDLFlBQVksQ0FBQyxJQUFJLENBQUMsSUFBSSxDQUFDLFVBQVUsQ0FBQyxDQUFDO0lBQzFDLENBQUM7OzZHQWhCVSxnQkFBZ0I7aUdBQWhCLGdCQUFnQiw4RkNSN0IsNmFBWUE7MkZESmEsZ0JBQWdCO2tCQUw1QixTQUFTO21CQUFDO29CQUNULFFBQVEsRUFBRSxhQUFhO29CQUN2QixXQUFXLEVBQUUsMEJBQTBCO29CQUN2QyxTQUFTLEVBQUUsQ0FBQyx5QkFBeUIsQ0FBQztpQkFDdkM7MEVBRVcsWUFBWTtzQkFBckIsTUFBTSIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IENvbXBvbmVudCwgRXZlbnRFbWl0dGVyLCBPbkluaXQsIE91dHB1dCB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuXG5cbkBDb21wb25lbnQoe1xuICBzZWxlY3RvcjogJ2xpYi1jb3VudGVyJyxcbiAgdGVtcGxhdGVVcmw6ICcuL2NvdW50ZXIuY29tcG9uZW50Lmh0bWwnLFxuICBzdHlsZVVybHM6IFsnLi9jb3VudGVyLmNvbXBvbmVudC5jc3MnXVxufSlcbmV4cG9ydCBjbGFzcyBDb3VudGVyQ29tcG9uZW50IGltcGxlbWVudHMgT25Jbml0IHtcbiAgQE91dHB1dCgpIGNvdW50Q2hhbmdlZDogRXZlbnRFbWl0dGVyPGFueT4gPSBuZXcgRXZlbnRFbWl0dGVyKCk7XG4gIGNsaWNrQ291bnQ6YW55ID0wO1xuXG4gIGNvbnN0cnVjdG9yKCkgeyB9XG5cbiAgbmdPbkluaXQoKTogdm9pZCB7XG4gIH1cbiAgb25QbHVzQ2xpY2soKXtcbiAgICB0aGlzLmNsaWNrQ291bnQrKztcbiAgICB0aGlzLmNvdW50Q2hhbmdlZC5lbWl0KHRoaXMuY2xpY2tDb3VudClcblxuICB9XG4gIG9uTWludXNDbGljaygpe1xuICAgIHRoaXMuY2xpY2tDb3VudC0tO1xuICAgIHRoaXMuY291bnRDaGFuZ2VkLmVtaXQodGhpcy5jbGlja0NvdW50KTtcbiAgfVxuXG59XG4iLCJcblxuXG4gIDxidXR0b24gbWF0LW1pbmktZmFiIGNvbG9yPVwiYWNjZW50XCIgYXJpYS1sYWJlbD1cIkV4YW1wbGUgaWNvbiBidXR0b24gd2l0aCBhIHBsdXMgb25lIGljb25cIiAoY2xpY2spPVwib25QbHVzQ2xpY2soKVwiPlxuICAgIDxtYXQtaWNvbj5hZGQ8L21hdC1pY29uPlxuICA8L2J1dHRvbj5cbiAgXG4gIDxpbnB1dCB0eXBlPVwidGV4dFwiIHJlYWRvbmx5IGNsYXNzPVwiY291bnRlclwiIHZhbHVlPVwie3tjbGlja0NvdW50fX1cIj5cblxuICA8YnV0dG9uIG1hdC1taW5pLWZhYiBjb2xvcj1cImFjY2VudFwiIGFyaWEtbGFiZWw9XCJFeGFtcGxlIGljb24gYnV0dG9uIHdpdGggYSBwbHVzIG9uZSBpY29uXCIgKGNsaWNrKT1cIm9uTWludXNDbGljaygpXCI+XG4gICAgPG1hdC1pY29uPnJlbW92ZTwvbWF0LWljb24+XG4gIDwvYnV0dG9uPlxuIl19