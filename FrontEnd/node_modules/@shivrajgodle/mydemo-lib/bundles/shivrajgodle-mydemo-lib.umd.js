(function (global, factory) {
    typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports, require('@angular/core'), require('@angular/material/form-field'), require('@angular/material/icon'), require('@angular/material/input'), require('@angular/forms'), require('@angular/material/button')) :
    typeof define === 'function' && define.amd ? define('@shivrajgodle/mydemo-lib', ['exports', '@angular/core', '@angular/material/form-field', '@angular/material/icon', '@angular/material/input', '@angular/forms', '@angular/material/button'], factory) :
    (global = typeof globalThis !== 'undefined' ? globalThis : global || self, factory((global.shivrajgodle = global.shivrajgodle || {}, global.shivrajgodle['mydemo-lib'] = {}), global.ng.core, global.ng.material.formField, global.ng.material.icon, global.ng.material.input, global.ng.forms, global.ng.material.button));
}(this, (function (exports, i0, i1, i2, i3, i4, i1$1) { 'use strict';

    function _interopNamespace(e) {
        if (e && e.__esModule) return e;
        var n = Object.create(null);
        if (e) {
            Object.keys(e).forEach(function (k) {
                if (k !== 'default') {
                    var d = Object.getOwnPropertyDescriptor(e, k);
                    Object.defineProperty(n, k, d.get ? d : {
                        enumerable: true,
                        get: function () {
                            return e[k];
                        }
                    });
                }
            });
        }
        n['default'] = e;
        return Object.freeze(n);
    }

    var i0__namespace = /*#__PURE__*/_interopNamespace(i0);
    var i1__namespace = /*#__PURE__*/_interopNamespace(i1);
    var i2__namespace = /*#__PURE__*/_interopNamespace(i2);
    var i3__namespace = /*#__PURE__*/_interopNamespace(i3);
    var i4__namespace = /*#__PURE__*/_interopNamespace(i4);
    var i1__namespace$1 = /*#__PURE__*/_interopNamespace(i1$1);

    var CCInputBoxComponent = /** @class */ (function () {
        function CCInputBoxComponent() {
        }
        CCInputBoxComponent.prototype.ngOnInit = function () {
        };
        CCInputBoxComponent.prototype.onKeyDown = function (event) {
            var input = event.target;
            var trimmed = input.value.replace(/\s+/g, '');
            if (trimmed.length > 16) {
                trimmed = trimmed.substr(0, 16);
            }
            var numbers = [];
            for (var i = 0; i < trimmed.length; i += 4) {
                numbers.push(trimmed.substr(i, 4));
            }
            input.value = numbers.join(' ');
        };
        return CCInputBoxComponent;
    }());
    CCInputBoxComponent.ɵfac = i0__namespace.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.0.5", ngImport: i0__namespace, type: CCInputBoxComponent, deps: [], target: i0__namespace.ɵɵFactoryTarget.Component });
    CCInputBoxComponent.ɵcmp = i0__namespace.ɵɵngDeclareComponent({ minVersion: "12.0.0", version: "12.0.5", type: CCInputBoxComponent, selector: "lib-ccinput-box", inputs: { placeholderText: "placeholderText", cardNumber: "cardNumber", iconText: "iconText" }, host: { listeners: { "input": "onKeyDown($event)" } }, ngImport: i0__namespace, template: "\n\n<mat-form-field appearance=\"standard\">\n  <input matInput formControlName=\"{{cardNumber}}\" type=\"text\"  placeholder=\"{{placeholderText}}\" credit-card>\n  <mat-icon matSuffix>{{iconText}}</mat-icon>\n\n</mat-form-field>\n\n\n\n\n\n\n", styles: ["mat-card{width:100%}mat-card-header{border-bottom:1px solid #000;padding:30px 30px 10px;width:250px;text-align:center;background-color:#00ff7f}mat-card-content{margin-top:10px;width:100%}img{width:100px;height:120px}.add_product{font-size:35px;font-weight:450;padding:10px;text-align:center}form{background-color:#fff;text-align:center;padding:0}button,form{border:1px solid #000}button{width:40px;margin-top:10px}input{background-color:#fff;font-size:18px}.space{margin-bottom:0}@media (min-width:768px){form{border:1px solid #000;background-color:#fff;text-align:center;padding:0}mat-card-header{border-bottom:1px solid #000;padding:30px 30px 10px;width:650px;background-color:#00ff7f}mat-card-content{margin-top:10px}mat-form-field{width:550px}button{width:90px;text-align:right;margin-right:30px}}.invisible{display:block;visibility:hidden;height:0;width:0}.month,.year{width:70px;text-align:center}.cvv{width:50px;text-align:center}.payment{border-style:dashed;width:95%;margin-left:5px;border-radius:20px}.icons{padding:0 30px}"], components: [{ type: i1__namespace.MatFormField, selector: "mat-form-field", inputs: ["color", "floatLabel", "appearance", "hideRequiredMarker", "hintLabel"], exportAs: ["matFormField"] }, { type: i2__namespace.MatIcon, selector: "mat-icon", inputs: ["color", "inline", "svgIcon", "fontSet", "fontIcon"], exportAs: ["matIcon"] }], directives: [{ type: i3__namespace.MatInput, selector: "input[matInput], textarea[matInput], select[matNativeControl],      input[matNativeControl], textarea[matNativeControl]", inputs: ["id", "disabled", "required", "type", "value", "readonly", "placeholder", "errorStateMatcher", "aria-describedby"], exportAs: ["matInput"] }, { type: i4__namespace.DefaultValueAccessor, selector: "input:not([type=checkbox])[formControlName],textarea[formControlName],input:not([type=checkbox])[formControl],textarea[formControl],input:not([type=checkbox])[ngModel],textarea[ngModel],[ngDefaultControl]" }, { type: i4__namespace.NgControlStatus, selector: "[formControlName],[ngModel],[formControl]" }, { type: i4__namespace.FormControlName, selector: "[formControlName]", inputs: ["disabled", "formControlName", "ngModel"], outputs: ["ngModelChange"] }, { type: i1__namespace.MatSuffix, selector: "[matSuffix]" }] });
    i0__namespace.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.0.5", ngImport: i0__namespace, type: CCInputBoxComponent, decorators: [{
                type: i0.Component,
                args: [{
                        selector: 'lib-ccinput-box',
                        templateUrl: './ccinput-box.component.html',
                        styleUrls: ['./ccinput-box.component.css']
                    }]
            }], ctorParameters: function () { return []; }, propDecorators: { placeholderText: [{
                    type: i0.Input
                }], cardNumber: [{
                    type: i0.Input
                }], iconText: [{
                    type: i0.Input
                }], onKeyDown: [{
                    type: i0.HostListener,
                    args: ['input', ['$event']]
                }] } });

    var ButtionComponent = /** @class */ (function () {
        // @Output() buttonClickEmit: EventEmitter<string> = new EventEmitter<string>();
        function ButtionComponent() {
        }
        ButtionComponent.prototype.ngOnInit = function () {
        };
        ButtionComponent.prototype.onButtonClick = function () {
            // this.buttonClickEmit.emit('you have clicked on button');
        };
        return ButtionComponent;
    }());
    ButtionComponent.ɵfac = i0__namespace.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.0.5", ngImport: i0__namespace, type: ButtionComponent, deps: [], target: i0__namespace.ɵɵFactoryTarget.Component });
    ButtionComponent.ɵcmp = i0__namespace.ɵɵngDeclareComponent({ minVersion: "12.0.0", version: "12.0.5", type: ButtionComponent, selector: "lib-buttion", inputs: { buttonText: "buttonText", iconName: "iconName" }, ngImport: i0__namespace, template: "\n\n\n\n<button type=\"button\" (click)=\"onButtonClick()\" mat-raised-button color=\"primary\">\n\n  {{buttonText}}\n\n  <mat-icon>{{iconName}} </mat-icon>\n\n</button>\n\n\n", styles: [""], components: [{ type: i1__namespace$1.MatButton, selector: "button[mat-button], button[mat-raised-button], button[mat-icon-button],             button[mat-fab], button[mat-mini-fab], button[mat-stroked-button],             button[mat-flat-button]", inputs: ["disabled", "disableRipple", "color"], exportAs: ["matButton"] }, { type: i2__namespace.MatIcon, selector: "mat-icon", inputs: ["color", "inline", "svgIcon", "fontSet", "fontIcon"], exportAs: ["matIcon"] }] });
    i0__namespace.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.0.5", ngImport: i0__namespace, type: ButtionComponent, decorators: [{
                type: i0.Component,
                args: [{
                        selector: 'lib-buttion',
                        templateUrl: './buttion.component.html',
                        styleUrls: ['./buttion.component.css']
                    }]
            }], ctorParameters: function () { return []; }, propDecorators: { buttonText: [{
                    type: i0.Input
                }], iconName: [{
                    type: i0.Input
                }] } });

    var CounterComponent = /** @class */ (function () {
        function CounterComponent() {
            this.countChanged = new i0.EventEmitter();
            this.clickCount = 0;
        }
        CounterComponent.prototype.ngOnInit = function () {
        };
        CounterComponent.prototype.onPlusClick = function () {
            this.clickCount++;
            this.countChanged.emit(this.clickCount);
        };
        CounterComponent.prototype.onMinusClick = function () {
            this.clickCount--;
            this.countChanged.emit(this.clickCount);
        };
        return CounterComponent;
    }());
    CounterComponent.ɵfac = i0__namespace.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.0.5", ngImport: i0__namespace, type: CounterComponent, deps: [], target: i0__namespace.ɵɵFactoryTarget.Component });
    CounterComponent.ɵcmp = i0__namespace.ɵɵngDeclareComponent({ minVersion: "12.0.0", version: "12.0.5", type: CounterComponent, selector: "lib-counter", outputs: { countChanged: "countChanged" }, ngImport: i0__namespace, template: "\n\n\n  <button mat-mini-fab color=\"accent\" aria-label=\"Example icon button with a plus one icon\" (click)=\"onPlusClick()\">\n    <mat-icon>add</mat-icon>\n  </button>\n  \n  <input type=\"text\" readonly class=\"counter\" value=\"{{clickCount}}\">\n\n  <button mat-mini-fab color=\"accent\" aria-label=\"Example icon button with a plus one icon\" (click)=\"onMinusClick()\">\n    <mat-icon>remove</mat-icon>\n  </button>\n", styles: [".counter{text-align:center;background-color:#fff;width:50px;height:33.5px;border-top:1px solid #000;border-bottom:1px solid #000}"], components: [{ type: i1__namespace$1.MatButton, selector: "button[mat-button], button[mat-raised-button], button[mat-icon-button],             button[mat-fab], button[mat-mini-fab], button[mat-stroked-button],             button[mat-flat-button]", inputs: ["disabled", "disableRipple", "color"], exportAs: ["matButton"] }, { type: i2__namespace.MatIcon, selector: "mat-icon", inputs: ["color", "inline", "svgIcon", "fontSet", "fontIcon"], exportAs: ["matIcon"] }] });
    i0__namespace.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.0.5", ngImport: i0__namespace, type: CounterComponent, decorators: [{
                type: i0.Component,
                args: [{
                        selector: 'lib-counter',
                        templateUrl: './counter.component.html',
                        styleUrls: ['./counter.component.css']
                    }]
            }], ctorParameters: function () { return []; }, propDecorators: { countChanged: [{
                    type: i0.Output
                }] } });

    var MydemoLibService = /** @class */ (function () {
        function MydemoLibService() {
        }
        return MydemoLibService;
    }());
    MydemoLibService.ɵfac = i0__namespace.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.0.5", ngImport: i0__namespace, type: MydemoLibService, deps: [], target: i0__namespace.ɵɵFactoryTarget.Injectable });
    MydemoLibService.ɵprov = i0__namespace.ɵɵngDeclareInjectable({ minVersion: "12.0.0", version: "12.0.5", ngImport: i0__namespace, type: MydemoLibService, providedIn: 'root' });
    i0__namespace.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.0.5", ngImport: i0__namespace, type: MydemoLibService, decorators: [{
                type: i0.Injectable,
                args: [{
                        providedIn: 'root'
                    }]
            }], ctorParameters: function () { return []; } });

    var MydemoLibComponent = /** @class */ (function () {
        function MydemoLibComponent() {
        }
        MydemoLibComponent.prototype.ngOnInit = function () {
        };
        return MydemoLibComponent;
    }());
    MydemoLibComponent.ɵfac = i0__namespace.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.0.5", ngImport: i0__namespace, type: MydemoLibComponent, deps: [], target: i0__namespace.ɵɵFactoryTarget.Component });
    MydemoLibComponent.ɵcmp = i0__namespace.ɵɵngDeclareComponent({ minVersion: "12.0.0", version: "12.0.5", type: MydemoLibComponent, selector: "lib-mydemo-lib", ngImport: i0__namespace, template: "\n    <p>\n      mydemo-lib works!\n    </p>\n  ", isInline: true });
    i0__namespace.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.0.5", ngImport: i0__namespace, type: MydemoLibComponent, decorators: [{
                type: i0.Component,
                args: [{
                        selector: 'lib-mydemo-lib',
                        template: "\n    <p>\n      mydemo-lib works!\n    </p>\n  ",
                        styles: []
                    }]
            }], ctorParameters: function () { return []; } });

    var MydemoLibModule = /** @class */ (function () {
        function MydemoLibModule() {
        }
        return MydemoLibModule;
    }());
    MydemoLibModule.ɵfac = i0__namespace.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.0.5", ngImport: i0__namespace, type: MydemoLibModule, deps: [], target: i0__namespace.ɵɵFactoryTarget.NgModule });
    MydemoLibModule.ɵmod = i0__namespace.ɵɵngDeclareNgModule({ minVersion: "12.0.0", version: "12.0.5", ngImport: i0__namespace, type: MydemoLibModule, declarations: [MydemoLibComponent,
            CounterComponent,
            ButtionComponent,
            CCInputBoxComponent], imports: [i1$1.MatButtonModule,
            i2.MatIconModule,
            i1.MatFormFieldModule,
            i4.ReactiveFormsModule,
            i3.MatInputModule], exports: [MydemoLibComponent, CounterComponent, ButtionComponent, CCInputBoxComponent] });
    MydemoLibModule.ɵinj = i0__namespace.ɵɵngDeclareInjector({ minVersion: "12.0.0", version: "12.0.5", ngImport: i0__namespace, type: MydemoLibModule, imports: [[
                i1$1.MatButtonModule,
                i2.MatIconModule,
                i1.MatFormFieldModule,
                i4.ReactiveFormsModule,
                i3.MatInputModule
            ]] });
    i0__namespace.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.0.5", ngImport: i0__namespace, type: MydemoLibModule, decorators: [{
                type: i0.NgModule,
                args: [{
                        declarations: [
                            MydemoLibComponent,
                            CounterComponent,
                            ButtionComponent,
                            CCInputBoxComponent
                        ],
                        imports: [
                            i1$1.MatButtonModule,
                            i2.MatIconModule,
                            i1.MatFormFieldModule,
                            i4.ReactiveFormsModule,
                            i3.MatInputModule
                        ],
                        exports: [
                            MydemoLibComponent, CounterComponent, ButtionComponent, CCInputBoxComponent
                        ]
                    }]
            }] });

    /*
     * Public API Surface of mydemo-lib
     */

    /**
     * Generated bundle index. Do not edit.
     */

    exports.ButtionComponent = ButtionComponent;
    exports.CCInputBoxComponent = CCInputBoxComponent;
    exports.CounterComponent = CounterComponent;
    exports.MydemoLibComponent = MydemoLibComponent;
    exports.MydemoLibModule = MydemoLibModule;
    exports.MydemoLibService = MydemoLibService;

    Object.defineProperty(exports, '__esModule', { value: true });

})));
//# sourceMappingURL=shivrajgodle-mydemo-lib.umd.js.map
