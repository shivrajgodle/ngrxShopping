import { ILogger } from '../../util';
import { IUser } from '../../core/models/user';
import { AuthenticatorValidationResult } from '../interfaces/authenticator';
import { BaseAuthenticator } from './base-authenticator';
interface FidoAuthenticatorOptions {
    expectedOrigins: string[];
}
export declare class FidoAuthenticator extends BaseAuthenticator {
    private pendingChallenges;
    private readonly expectedOrigins;
    constructor(logger: ILogger, options: FidoAuthenticatorOptions);
    isAuthenticationTypeMissing(user: IUser, value?: any): AuthenticatorValidationResult;
    prepareAuthenticationType(user: IUser, value?: any): IUser;
    private onChallenge;
    private onResponse;
    private checkSignature;
}
export {};
