"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.FidoValidator = void 0;
var fido_helper_1 = require("./fido-helper");
var FidoValidator;
(function (FidoValidator) {
    function validate(clientData, expectations, type) {
        validateType(clientData, type);
        validateChallenge(clientData, expectations);
        validateOrigin(clientData, expectations);
    }
    FidoValidator.validate = validate;
    function validateType(clientData, type) {
        if (clientData.type !== type) {
            throw new Error("Wrong type of webauthn! Expected " + type + " - Received " + clientData.type);
        }
    }
    function validateChallenge(clientData, expectations) {
        if (clientData.challenge !== fido_helper_1.FidoHelper.trimBase64(expectations.challenge)) {
            throw new Error("Challenges are different! Expected " + expectations.challenge + " - Received " + clientData.challenge);
        }
    }
    function validateOrigin(clientData, expectations) {
        if (Array.isArray(expectations.origin) && !expectations.origin.includes(clientData.origin)) {
            throw new Error("Origins are different! Expected one of " + expectations.origin.join(', ') + " - Received " + clientData.origin);
        }
        else if (!Array.isArray(expectations.origin) && clientData.origin !== expectations.origin) {
            throw new Error("Origins are different! Expected " + expectations.origin + " - Received " + clientData.origin);
        }
    }
})(FidoValidator = exports.FidoValidator || (exports.FidoValidator = {}));
