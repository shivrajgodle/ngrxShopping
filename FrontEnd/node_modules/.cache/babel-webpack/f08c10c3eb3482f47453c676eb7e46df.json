{"ast":null,"code":"import * as i0 from '@angular/core';\nimport { Component, Input, HostListener, EventEmitter, Output, Injectable, NgModule } from '@angular/core';\nimport * as i1 from '@angular/material/form-field';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport * as i2 from '@angular/material/icon';\nimport { MatIconModule } from '@angular/material/icon';\nimport * as i3 from '@angular/material/input';\nimport { MatInputModule } from '@angular/material/input';\nimport * as i4 from '@angular/forms';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport * as i1$1 from '@angular/material/button';\nimport { MatButtonModule } from '@angular/material/button';\n\nclass CCInputBoxComponent {\n  constructor() {}\n\n  ngOnInit() {}\n\n  onKeyDown(event) {\n    const input = event.target;\n    let trimmed = input.value.replace(/\\s+/g, '');\n\n    if (trimmed.length > 16) {\n      trimmed = trimmed.substr(0, 16);\n    }\n\n    let numbers = [];\n\n    for (let i = 0; i < trimmed.length; i += 4) {\n      numbers.push(trimmed.substr(i, 4));\n    }\n\n    input.value = numbers.join(' ');\n  }\n\n}\n\nCCInputBoxComponent.ɵfac = function CCInputBoxComponent_Factory(t) {\n  return new (t || CCInputBoxComponent)();\n};\n\nCCInputBoxComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: CCInputBoxComponent,\n  selectors: [[\"lib-ccinput-box\"]],\n  hostBindings: function CCInputBoxComponent_HostBindings(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵlistener(\"input\", function CCInputBoxComponent_input_HostBindingHandler($event) {\n        return ctx.onKeyDown($event);\n      });\n    }\n  },\n  inputs: {\n    placeholderText: \"placeholderText\",\n    cardNumber: \"cardNumber\",\n    iconText: \"iconText\"\n  },\n  decls: 4,\n  vars: 3,\n  consts: [[\"appearance\", \"standard\"], [\"matInput\", \"\", \"type\", \"text\", \"credit-card\", \"\", 3, \"formControlName\", \"placeholder\"], [\"matSuffix\", \"\"]],\n  template: function CCInputBoxComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"mat-form-field\", 0);\n      i0.ɵɵelement(1, \"input\", 1);\n      i0.ɵɵelementStart(2, \"mat-icon\", 2);\n      i0.ɵɵtext(3);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementEnd();\n    }\n\n    if (rf & 2) {\n      i0.ɵɵadvance(1);\n      i0.ɵɵpropertyInterpolate(\"formControlName\", ctx.cardNumber);\n      i0.ɵɵpropertyInterpolate(\"placeholder\", ctx.placeholderText);\n      i0.ɵɵadvance(2);\n      i0.ɵɵtextInterpolate(ctx.iconText);\n    }\n  },\n  directives: [i1.MatFormField, i3.MatInput, i4.DefaultValueAccessor, i4.NgControlStatus, i4.FormControlName, i2.MatIcon, i1.MatSuffix],\n  styles: [\"mat-card[_ngcontent-%COMP%]{width:100%}mat-card-header[_ngcontent-%COMP%]{border-bottom:1px solid #000;padding:30px 30px 10px;width:250px;text-align:center;background-color:#00ff7f}mat-card-content[_ngcontent-%COMP%]{margin-top:10px;width:100%}img[_ngcontent-%COMP%]{width:100px;height:120px}.add_product[_ngcontent-%COMP%]{font-size:35px;font-weight:450;padding:10px;text-align:center}form[_ngcontent-%COMP%]{background-color:#fff;text-align:center;padding:0}button[_ngcontent-%COMP%], form[_ngcontent-%COMP%]{border:1px solid #000}button[_ngcontent-%COMP%]{width:40px;margin-top:10px}input[_ngcontent-%COMP%]{background-color:#fff;font-size:18px}.space[_ngcontent-%COMP%]{margin-bottom:0}@media (min-width:768px){form[_ngcontent-%COMP%]{border:1px solid #000;background-color:#fff;text-align:center;padding:0}mat-card-header[_ngcontent-%COMP%]{border-bottom:1px solid #000;padding:30px 30px 10px;width:650px;background-color:#00ff7f}mat-card-content[_ngcontent-%COMP%]{margin-top:10px}mat-form-field[_ngcontent-%COMP%]{width:550px}button[_ngcontent-%COMP%]{width:90px;text-align:right;margin-right:30px}}.invisible[_ngcontent-%COMP%]{display:block;visibility:hidden;height:0;width:0}.month[_ngcontent-%COMP%], .year[_ngcontent-%COMP%]{width:70px;text-align:center}.cvv[_ngcontent-%COMP%]{width:50px;text-align:center}.payment[_ngcontent-%COMP%]{border-style:dashed;width:95%;margin-left:5px;border-radius:20px}.icons[_ngcontent-%COMP%]{padding:0 30px}\"]\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(CCInputBoxComponent, [{\n    type: Component,\n    args: [{\n      selector: 'lib-ccinput-box',\n      templateUrl: './ccinput-box.component.html',\n      styleUrls: ['./ccinput-box.component.css']\n    }]\n  }], function () {\n    return [];\n  }, {\n    placeholderText: [{\n      type: Input\n    }],\n    cardNumber: [{\n      type: Input\n    }],\n    iconText: [{\n      type: Input\n    }],\n    onKeyDown: [{\n      type: HostListener,\n      args: ['input', ['$event']]\n    }]\n  });\n})();\n\nclass ButtionComponent {\n  // @Output() buttonClickEmit: EventEmitter<string> = new EventEmitter<string>();\n  constructor() {}\n\n  ngOnInit() {}\n\n  onButtonClick() {// this.buttonClickEmit.emit('you have clicked on button');\n  }\n\n}\n\nButtionComponent.ɵfac = function ButtionComponent_Factory(t) {\n  return new (t || ButtionComponent)();\n};\n\nButtionComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: ButtionComponent,\n  selectors: [[\"lib-buttion\"]],\n  inputs: {\n    buttonText: \"buttonText\",\n    iconName: \"iconName\"\n  },\n  decls: 4,\n  vars: 2,\n  consts: [[\"type\", \"button\", \"mat-raised-button\", \"\", \"color\", \"primary\", 3, \"click\"]],\n  template: function ButtionComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"button\", 0);\n      i0.ɵɵlistener(\"click\", function ButtionComponent_Template_button_click_0_listener() {\n        return ctx.onButtonClick();\n      });\n      i0.ɵɵtext(1);\n      i0.ɵɵelementStart(2, \"mat-icon\");\n      i0.ɵɵtext(3);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementEnd();\n    }\n\n    if (rf & 2) {\n      i0.ɵɵadvance(1);\n      i0.ɵɵtextInterpolate1(\" \", ctx.buttonText, \" \");\n      i0.ɵɵadvance(2);\n      i0.ɵɵtextInterpolate1(\"\", ctx.iconName, \" \");\n    }\n  },\n  directives: [i1$1.MatButton, i2.MatIcon],\n  styles: [\"\"]\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(ButtionComponent, [{\n    type: Component,\n    args: [{\n      selector: 'lib-buttion',\n      templateUrl: './buttion.component.html',\n      styleUrls: ['./buttion.component.css']\n    }]\n  }], function () {\n    return [];\n  }, {\n    buttonText: [{\n      type: Input\n    }],\n    iconName: [{\n      type: Input\n    }]\n  });\n})();\n\nclass CounterComponent {\n  constructor() {\n    this.countChanged = new EventEmitter();\n    this.clickCount = 0;\n  }\n\n  ngOnInit() {}\n\n  onPlusClick() {\n    this.clickCount++;\n    this.countChanged.emit(this.clickCount);\n  }\n\n  onMinusClick() {\n    this.clickCount--;\n    this.countChanged.emit(this.clickCount);\n  }\n\n}\n\nCounterComponent.ɵfac = function CounterComponent_Factory(t) {\n  return new (t || CounterComponent)();\n};\n\nCounterComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: CounterComponent,\n  selectors: [[\"lib-counter\"]],\n  outputs: {\n    countChanged: \"countChanged\"\n  },\n  decls: 7,\n  vars: 1,\n  consts: [[\"mat-mini-fab\", \"\", \"color\", \"accent\", \"aria-label\", \"Example icon button with a plus one icon\", 3, \"click\"], [\"type\", \"text\", \"readonly\", \"\", 1, \"counter\", 3, \"value\"]],\n  template: function CounterComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"button\", 0);\n      i0.ɵɵlistener(\"click\", function CounterComponent_Template_button_click_0_listener() {\n        return ctx.onPlusClick();\n      });\n      i0.ɵɵelementStart(1, \"mat-icon\");\n      i0.ɵɵtext(2, \"add\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(3, \"input\", 1);\n      i0.ɵɵelementStart(4, \"button\", 0);\n      i0.ɵɵlistener(\"click\", function CounterComponent_Template_button_click_4_listener() {\n        return ctx.onMinusClick();\n      });\n      i0.ɵɵelementStart(5, \"mat-icon\");\n      i0.ɵɵtext(6, \"remove\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementEnd();\n    }\n\n    if (rf & 2) {\n      i0.ɵɵadvance(3);\n      i0.ɵɵpropertyInterpolate(\"value\", ctx.clickCount);\n    }\n  },\n  directives: [i1$1.MatButton, i2.MatIcon],\n  styles: [\".counter[_ngcontent-%COMP%]{text-align:center;background-color:#fff;width:50px;height:33.5px;border-top:1px solid #000;border-bottom:1px solid #000}\"]\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(CounterComponent, [{\n    type: Component,\n    args: [{\n      selector: 'lib-counter',\n      templateUrl: './counter.component.html',\n      styleUrls: ['./counter.component.css']\n    }]\n  }], function () {\n    return [];\n  }, {\n    countChanged: [{\n      type: Output\n    }]\n  });\n})();\n\nclass MydemoLibService {\n  constructor() {}\n\n}\n\nMydemoLibService.ɵfac = function MydemoLibService_Factory(t) {\n  return new (t || MydemoLibService)();\n};\n\nMydemoLibService.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n  token: MydemoLibService,\n  factory: MydemoLibService.ɵfac,\n  providedIn: 'root'\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(MydemoLibService, [{\n    type: Injectable,\n    args: [{\n      providedIn: 'root'\n    }]\n  }], function () {\n    return [];\n  }, null);\n})();\n\nclass MydemoLibComponent {\n  constructor() {}\n\n  ngOnInit() {}\n\n}\n\nMydemoLibComponent.ɵfac = function MydemoLibComponent_Factory(t) {\n  return new (t || MydemoLibComponent)();\n};\n\nMydemoLibComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: MydemoLibComponent,\n  selectors: [[\"lib-mydemo-lib\"]],\n  decls: 2,\n  vars: 0,\n  template: function MydemoLibComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"p\");\n      i0.ɵɵtext(1, \" mydemo-lib works! \");\n      i0.ɵɵelementEnd();\n    }\n  },\n  encapsulation: 2\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(MydemoLibComponent, [{\n    type: Component,\n    args: [{\n      selector: 'lib-mydemo-lib',\n      template: `\n    <p>\n      mydemo-lib works!\n    </p>\n  `,\n      styles: []\n    }]\n  }], function () {\n    return [];\n  }, null);\n})();\n\nclass MydemoLibModule {}\n\nMydemoLibModule.ɵfac = function MydemoLibModule_Factory(t) {\n  return new (t || MydemoLibModule)();\n};\n\nMydemoLibModule.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n  type: MydemoLibModule\n});\nMydemoLibModule.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n  imports: [[MatButtonModule, MatIconModule, MatFormFieldModule, ReactiveFormsModule, MatInputModule]]\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(MydemoLibModule, [{\n    type: NgModule,\n    args: [{\n      declarations: [MydemoLibComponent, CounterComponent, ButtionComponent, CCInputBoxComponent],\n      imports: [MatButtonModule, MatIconModule, MatFormFieldModule, ReactiveFormsModule, MatInputModule],\n      exports: [MydemoLibComponent, CounterComponent, ButtionComponent, CCInputBoxComponent]\n    }]\n  }], null, null);\n})();\n/*\n * Public API Surface of mydemo-lib\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\n\nexport { ButtionComponent, CCInputBoxComponent, CounterComponent, MydemoLibComponent, MydemoLibModule, MydemoLibService }; //# sourceMappingURL=shivrajgodle-mydemo-lib.js.map","map":{"version":3,"sources":["/home/metamagic/Desktop/workspace 2.0/Shopping_Portal_NgRx/FrontEnd/node_modules/@shivrajgodle/mydemo-lib/fesm2015/shivrajgodle-mydemo-lib.js","/home/metamagic/Desktop/workspace 2.0/Shopping_Portal_NgRx/FrontEnd/node_modules/projects/mydemo-lib/src/lib/ccinput-box/ccinput-box.component.html","/home/metamagic/Desktop/workspace 2.0/Shopping_Portal_NgRx/FrontEnd/node_modules/projects/mydemo-lib/src/lib/buttion/buttion.component.html","/home/metamagic/Desktop/workspace 2.0/Shopping_Portal_NgRx/FrontEnd/node_modules/projects/mydemo-lib/src/lib/counter/counter.component.html"],"names":["i0","Component","Input","HostListener","EventEmitter","Output","Injectable","NgModule","i1","MatFormFieldModule","i2","MatIconModule","i3","MatInputModule","i4","ReactiveFormsModule","i1$1","MatButtonModule","CCInputBoxComponent","constructor","ngOnInit","onKeyDown","event","input","target","trimmed","value","replace","length","substr","numbers","i","push","join","ɵfac","ɵcmp","MatFormField","MatInput","DefaultValueAccessor","NgControlStatus","FormControlName","MatIcon","MatSuffix","type","args","selector","templateUrl","styleUrls","placeholderText","cardNumber","iconText","ButtionComponent","onButtonClick","MatButton","buttonText","iconName","CounterComponent","countChanged","clickCount","onPlusClick","emit","onMinusClick","MydemoLibService","ɵprov","providedIn","MydemoLibComponent","template","styles","MydemoLibModule","ɵmod","ɵinj","declarations","imports","exports"],"mappings":"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","sourcesContent":["import * as i0 from '@angular/core';\nimport { Component, Input, HostListener, EventEmitter, Output, Injectable, NgModule } from '@angular/core';\nimport * as i1 from '@angular/material/form-field';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport * as i2 from '@angular/material/icon';\nimport { MatIconModule } from '@angular/material/icon';\nimport * as i3 from '@angular/material/input';\nimport { MatInputModule } from '@angular/material/input';\nimport * as i4 from '@angular/forms';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport * as i1$1 from '@angular/material/button';\nimport { MatButtonModule } from '@angular/material/button';\n\nclass CCInputBoxComponent {\n    constructor() { }\n    ngOnInit() {\n    }\n    onKeyDown(event) {\n        const input = event.target;\n        let trimmed = input.value.replace(/\\s+/g, '');\n        if (trimmed.length > 16) {\n            trimmed = trimmed.substr(0, 16);\n        }\n        let numbers = [];\n        for (let i = 0; i < trimmed.length; i += 4) {\n            numbers.push(trimmed.substr(i, 4));\n        }\n        input.value = numbers.join(' ');\n    }\n}\nCCInputBoxComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.0.5\", ngImport: i0, type: CCInputBoxComponent, deps: [], target: i0.ɵɵFactoryTarget.Component });\nCCInputBoxComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"12.0.5\", type: CCInputBoxComponent, selector: \"lib-ccinput-box\", inputs: { placeholderText: \"placeholderText\", cardNumber: \"cardNumber\", iconText: \"iconText\" }, host: { listeners: { \"input\": \"onKeyDown($event)\" } }, ngImport: i0, template: \"\\n\\n<mat-form-field appearance=\\\"standard\\\">\\n  <input matInput formControlName=\\\"{{cardNumber}}\\\" type=\\\"text\\\"  placeholder=\\\"{{placeholderText}}\\\" credit-card>\\n  <mat-icon matSuffix>{{iconText}}</mat-icon>\\n\\n</mat-form-field>\\n\\n\\n\\n\\n\\n\\n\", styles: [\"mat-card{width:100%}mat-card-header{border-bottom:1px solid #000;padding:30px 30px 10px;width:250px;text-align:center;background-color:#00ff7f}mat-card-content{margin-top:10px;width:100%}img{width:100px;height:120px}.add_product{font-size:35px;font-weight:450;padding:10px;text-align:center}form{background-color:#fff;text-align:center;padding:0}button,form{border:1px solid #000}button{width:40px;margin-top:10px}input{background-color:#fff;font-size:18px}.space{margin-bottom:0}@media (min-width:768px){form{border:1px solid #000;background-color:#fff;text-align:center;padding:0}mat-card-header{border-bottom:1px solid #000;padding:30px 30px 10px;width:650px;background-color:#00ff7f}mat-card-content{margin-top:10px}mat-form-field{width:550px}button{width:90px;text-align:right;margin-right:30px}}.invisible{display:block;visibility:hidden;height:0;width:0}.month,.year{width:70px;text-align:center}.cvv{width:50px;text-align:center}.payment{border-style:dashed;width:95%;margin-left:5px;border-radius:20px}.icons{padding:0 30px}\"], components: [{ type: i1.MatFormField, selector: \"mat-form-field\", inputs: [\"color\", \"floatLabel\", \"appearance\", \"hideRequiredMarker\", \"hintLabel\"], exportAs: [\"matFormField\"] }, { type: i2.MatIcon, selector: \"mat-icon\", inputs: [\"color\", \"inline\", \"svgIcon\", \"fontSet\", \"fontIcon\"], exportAs: [\"matIcon\"] }], directives: [{ type: i3.MatInput, selector: \"input[matInput], textarea[matInput], select[matNativeControl],      input[matNativeControl], textarea[matNativeControl]\", inputs: [\"id\", \"disabled\", \"required\", \"type\", \"value\", \"readonly\", \"placeholder\", \"errorStateMatcher\", \"aria-describedby\"], exportAs: [\"matInput\"] }, { type: i4.DefaultValueAccessor, selector: \"input:not([type=checkbox])[formControlName],textarea[formControlName],input:not([type=checkbox])[formControl],textarea[formControl],input:not([type=checkbox])[ngModel],textarea[ngModel],[ngDefaultControl]\" }, { type: i4.NgControlStatus, selector: \"[formControlName],[ngModel],[formControl]\" }, { type: i4.FormControlName, selector: \"[formControlName]\", inputs: [\"disabled\", \"formControlName\", \"ngModel\"], outputs: [\"ngModelChange\"] }, { type: i1.MatSuffix, selector: \"[matSuffix]\" }] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.0.5\", ngImport: i0, type: CCInputBoxComponent, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'lib-ccinput-box',\n                    templateUrl: './ccinput-box.component.html',\n                    styleUrls: ['./ccinput-box.component.css']\n                }]\n        }], ctorParameters: function () { return []; }, propDecorators: { placeholderText: [{\n                type: Input\n            }], cardNumber: [{\n                type: Input\n            }], iconText: [{\n                type: Input\n            }], onKeyDown: [{\n                type: HostListener,\n                args: ['input', ['$event']]\n            }] } });\n\nclass ButtionComponent {\n    // @Output() buttonClickEmit: EventEmitter<string> = new EventEmitter<string>();\n    constructor() { }\n    ngOnInit() {\n    }\n    onButtonClick() {\n        // this.buttonClickEmit.emit('you have clicked on button');\n    }\n}\nButtionComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.0.5\", ngImport: i0, type: ButtionComponent, deps: [], target: i0.ɵɵFactoryTarget.Component });\nButtionComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"12.0.5\", type: ButtionComponent, selector: \"lib-buttion\", inputs: { buttonText: \"buttonText\", iconName: \"iconName\" }, ngImport: i0, template: \"\\n\\n\\n\\n<button type=\\\"button\\\" (click)=\\\"onButtonClick()\\\" mat-raised-button color=\\\"primary\\\">\\n\\n  {{buttonText}}\\n\\n  <mat-icon>{{iconName}} </mat-icon>\\n\\n</button>\\n\\n\\n\", styles: [\"\"], components: [{ type: i1$1.MatButton, selector: \"button[mat-button], button[mat-raised-button], button[mat-icon-button],             button[mat-fab], button[mat-mini-fab], button[mat-stroked-button],             button[mat-flat-button]\", inputs: [\"disabled\", \"disableRipple\", \"color\"], exportAs: [\"matButton\"] }, { type: i2.MatIcon, selector: \"mat-icon\", inputs: [\"color\", \"inline\", \"svgIcon\", \"fontSet\", \"fontIcon\"], exportAs: [\"matIcon\"] }] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.0.5\", ngImport: i0, type: ButtionComponent, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'lib-buttion',\n                    templateUrl: './buttion.component.html',\n                    styleUrls: ['./buttion.component.css']\n                }]\n        }], ctorParameters: function () { return []; }, propDecorators: { buttonText: [{\n                type: Input\n            }], iconName: [{\n                type: Input\n            }] } });\n\nclass CounterComponent {\n    constructor() {\n        this.countChanged = new EventEmitter();\n        this.clickCount = 0;\n    }\n    ngOnInit() {\n    }\n    onPlusClick() {\n        this.clickCount++;\n        this.countChanged.emit(this.clickCount);\n    }\n    onMinusClick() {\n        this.clickCount--;\n        this.countChanged.emit(this.clickCount);\n    }\n}\nCounterComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.0.5\", ngImport: i0, type: CounterComponent, deps: [], target: i0.ɵɵFactoryTarget.Component });\nCounterComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"12.0.5\", type: CounterComponent, selector: \"lib-counter\", outputs: { countChanged: \"countChanged\" }, ngImport: i0, template: \"\\n\\n\\n  <button mat-mini-fab color=\\\"accent\\\" aria-label=\\\"Example icon button with a plus one icon\\\" (click)=\\\"onPlusClick()\\\">\\n    <mat-icon>add</mat-icon>\\n  </button>\\n  \\n  <input type=\\\"text\\\" readonly class=\\\"counter\\\" value=\\\"{{clickCount}}\\\">\\n\\n  <button mat-mini-fab color=\\\"accent\\\" aria-label=\\\"Example icon button with a plus one icon\\\" (click)=\\\"onMinusClick()\\\">\\n    <mat-icon>remove</mat-icon>\\n  </button>\\n\", styles: [\".counter{text-align:center;background-color:#fff;width:50px;height:33.5px;border-top:1px solid #000;border-bottom:1px solid #000}\"], components: [{ type: i1$1.MatButton, selector: \"button[mat-button], button[mat-raised-button], button[mat-icon-button],             button[mat-fab], button[mat-mini-fab], button[mat-stroked-button],             button[mat-flat-button]\", inputs: [\"disabled\", \"disableRipple\", \"color\"], exportAs: [\"matButton\"] }, { type: i2.MatIcon, selector: \"mat-icon\", inputs: [\"color\", \"inline\", \"svgIcon\", \"fontSet\", \"fontIcon\"], exportAs: [\"matIcon\"] }] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.0.5\", ngImport: i0, type: CounterComponent, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'lib-counter',\n                    templateUrl: './counter.component.html',\n                    styleUrls: ['./counter.component.css']\n                }]\n        }], ctorParameters: function () { return []; }, propDecorators: { countChanged: [{\n                type: Output\n            }] } });\n\nclass MydemoLibService {\n    constructor() { }\n}\nMydemoLibService.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.0.5\", ngImport: i0, type: MydemoLibService, deps: [], target: i0.ɵɵFactoryTarget.Injectable });\nMydemoLibService.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"12.0.5\", ngImport: i0, type: MydemoLibService, providedIn: 'root' });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.0.5\", ngImport: i0, type: MydemoLibService, decorators: [{\n            type: Injectable,\n            args: [{\n                    providedIn: 'root'\n                }]\n        }], ctorParameters: function () { return []; } });\n\nclass MydemoLibComponent {\n    constructor() { }\n    ngOnInit() {\n    }\n}\nMydemoLibComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.0.5\", ngImport: i0, type: MydemoLibComponent, deps: [], target: i0.ɵɵFactoryTarget.Component });\nMydemoLibComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"12.0.5\", type: MydemoLibComponent, selector: \"lib-mydemo-lib\", ngImport: i0, template: `\n    <p>\n      mydemo-lib works!\n    </p>\n  `, isInline: true });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.0.5\", ngImport: i0, type: MydemoLibComponent, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'lib-mydemo-lib',\n                    template: `\n    <p>\n      mydemo-lib works!\n    </p>\n  `,\n                    styles: []\n                }]\n        }], ctorParameters: function () { return []; } });\n\nclass MydemoLibModule {\n}\nMydemoLibModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.0.5\", ngImport: i0, type: MydemoLibModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\nMydemoLibModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"12.0.0\", version: \"12.0.5\", ngImport: i0, type: MydemoLibModule, declarations: [MydemoLibComponent,\n        CounterComponent,\n        ButtionComponent,\n        CCInputBoxComponent], imports: [MatButtonModule,\n        MatIconModule,\n        MatFormFieldModule,\n        ReactiveFormsModule,\n        MatInputModule], exports: [MydemoLibComponent, CounterComponent, ButtionComponent, CCInputBoxComponent] });\nMydemoLibModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"12.0.5\", ngImport: i0, type: MydemoLibModule, imports: [[\n            MatButtonModule,\n            MatIconModule,\n            MatFormFieldModule,\n            ReactiveFormsModule,\n            MatInputModule\n        ]] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.0.5\", ngImport: i0, type: MydemoLibModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    declarations: [\n                        MydemoLibComponent,\n                        CounterComponent,\n                        ButtionComponent,\n                        CCInputBoxComponent\n                    ],\n                    imports: [\n                        MatButtonModule,\n                        MatIconModule,\n                        MatFormFieldModule,\n                        ReactiveFormsModule,\n                        MatInputModule\n                    ],\n                    exports: [\n                        MydemoLibComponent, CounterComponent, ButtionComponent, CCInputBoxComponent\n                    ]\n                }]\n        }] });\n\n/*\n * Public API Surface of mydemo-lib\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { ButtionComponent, CCInputBoxComponent, CounterComponent, MydemoLibComponent, MydemoLibModule, MydemoLibService };\n//# sourceMappingURL=shivrajgodle-mydemo-lib.js.map\n",null,null,null]},"metadata":{},"sourceType":"module"}