"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.TotpService = void 0;
const totp_1 = require("../models/totp");
const hotp_service_1 = require("./hotp-service");
var TotpService;
(function (TotpService) {
    function create(secret, args) {
        const digits = (args === null || args === void 0 ? void 0 : args.digits) ? args.digits : 6;
        const t1 = (args === null || args === void 0 ? void 0 : args.t1) ? args.t1 : getT1();
        const timeStepSize = (args === null || args === void 0 ? void 0 : args.timeStepSize) ? args.timeStepSize : 30;
        const timeSteps = Math.floor(t1 / timeStepSize);
        const totp = hotp_service_1.HotpService.create(secret, timeSteps, { digits }).value;
        return new totp_1.Totp({
            secret,
            value: totp,
            timeStepSize,
            verifyFn: verify
        });
    }
    TotpService.create = create;
    function verify(code, secret, args) {
        if (code.length < 6 || code.length > 8) {
            throw new Error('Undefined length of code.');
        }
        const t1 = (args === null || args === void 0 ? void 0 : args.t1) ? args.t1 : getT1();
        const timeStepSize = (args === null || args === void 0 ? void 0 : args.timeStepSize) ? args.timeStepSize : 30;
        const comparisons = [
            create(secret, { t1, digits: code.length, timeStepSize }).value,
            create(secret, { t1: t1 + timeStepSize, digits: code.length, timeStepSize }).value,
            create(secret, { t1: t1 + 2 * timeStepSize, digits: code.length, timeStepSize }).value
        ];
        return comparisons.some(comparison => comparison === code);
    }
    TotpService.verify = verify;
    function getT1() {
        return Math.round(new Date().getTime() / 1000);
    }
})(TotpService = exports.TotpService || (exports.TotpService = {}));
//# sourceMappingURL=totp-service.js.map